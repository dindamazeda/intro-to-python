PRVI ZADATAK
# Napisati program koji će da uzme 3 omiljena jela od korisnika i smesti ih u listu
# Zatim program treba da uzme 3 omiljena pića od korisnika i smesti ih u drugu listu
# Spojiti sve to u treću listu i isprintati treću listu



DRUGI ZADATAK
# Dat je niz brojeva. Napisati program koji će ispise najmanji i najveći broj iz niza
# niz_brojeva = [15, 116, 54, 30, 21, 41, 65, 7, 105, 135, 173, 56, 197, 56, 136, 83, 97, 130, 184, 112, 83, 157, 189, 24, 28, 127, 166, 99, 37, 114, 3, 123, 160, 97, 152]



TREĆI ZADATAK
# Dat je niz imenica u nasumičnom redosledu.
# Napisati program koji će da grupiše imenice u novu listu na osnovu početnog slova tj. da ih poređa po redosledu
# Međutim ima jedan uslov - prve imenice u novoj listi moraju da počinju sa slovom 'm', a nakon toga treba da ide po alfabetu
# Videti primer ispod
### primer ###
# imenice = ['patka', 'kvaka', 'staka', 'barka', 'marka', 'koka', 'ljorka', 'abrakadabra', 'mantra', 'karma', 'deka', 'seka', 'mleka']
# program: ['mantra', 'marka', 'mleka', 'abrakadabra', 'barka', 'deka', 'karma', 'koka', 'kvaka', 'ljorka', 'patka', 'seka', 'staka' ]



ČETVRTI ZADATAK
# Napisati program koji će uzeti neku reč od korisnika.
# Nakon toga zameniti svaki samoglasnik sa znakom uzvika -> !
### primer ###
# program: Napiši neku reč:
# korisnik: tranzicija
# program: tr!nz!c!j!



PETI ZADATAK
# Data je lista sa nekim stringovima, napisati program koji će da kaže kolika je frekventnost elemenata u listi tj. koliko puta se neki element ponavlaja u listi
### primer ###
# imenice = ['abrakadabra', 'staka', 'marka', 'seka', 'patka', 'deka', 'mleka', 'marka', 'deka', 'deka', 'ljorka', 'staka', 'ljorka', 'staka', 'abrakadabra', 'mantra', 'staka', 'barka', 'ljorka', 'barka']
# program: {'abrakadabra': 2, 'staka': 4, 'marka': 2, 'seka': 1, 'patka': 1, 'deka': 3, 'mleka': 1, 'ljorka': 3, 'mantra': 1, 'barka': 2}



ŠESTI ZADATAK
# Napisati program koji će da uzme dve liste i od njih napravi dictionary gde će elementi prve liste biti ključevi, a elementi druge liste vrednosti
### primer ###
# voce = ['banane', 'kivi', 'limun', 'lubenica', 'grejpfrut', 'jabuke', 'ananas']
# cene = [127.5, 119.8, 220.3, 84.4, 255.8, 65.3, 182]
program: {'banane': 127.5, 'kivi': 119.8 itd. }



SEDMI ZADATAK
# Enigma je mašina koja je korišćena za šifrovanje poruka -> https://en.wikipedia.org/wiki/Enigma_machine
# Napisati program koji pita korisnika da otkuca neki tekst a zatim šifruje tu poruku i isprinta je
# Šifrovanje je proces pretvaranja običnog teksta u neki nečitljiv tekst npr. tekst dobar dan pretvorimo u -> whkyi knq
# Naš algoritam za šifrovanje će biti sledeći:
# Imamo abecedu -> a,b,c,č,ć,d,dž,đ,e itd. -> https://sh.wikipedia.org/wiki/%C5%A0ablon:Srpskohrvatska_abeceda
# Svako slovo iz korisnikovog teksta treba da se 'pomeri' za 4 mesta unapred u abecedi
# Tako će npr. a postati ć, dok će b postati d itd.
# Na taj način ćemo šifrovati poruku i ona će postati nečitljiva
### primer ###
# program: Unesi neku reč ili neki tekst i ja ću da ti šifrujem taj tekst
# korisnik: baba
# program: Tvoja šifrovana poruka je dćdć



OSMI ZADATAK
# Uz pomoć while petlje napisati program koji će da isprinta sledeću šemu
*
* *
* * *
* * * *
* * * * *
* * * *
* * *
* *
*



DEVETI ZADATAK
# Uzeti broj od 1 do 10 do korisnika
# Napisati program koji će da kaže koje su reči u datoj listi duže od onog broja koji je korisnik uneo
# npr. ako je korisnik uneo broj 4, onda prikazati reči koje imaju više od 4 slova
# auti = ['bmw', 'porsche', 'audi', 'yugo', 'mitsubishi', 'nisan', 'toyota', 'kia', 'volvo', 'chevrolet', 'mazda']



DESETI ZADATAK
# Fibonačijev niz - napisati program koji će da isprina Fibonačijev niz
# Fibonačijev niz je niz gde je svaki sledeći element u nizu zbir dva prethodna broja iz zbira -> https://en.wikipedia.org/wiki/Fibonacci_number
# Pošto Fibonačijev niz može da ide do beskraja, isprintati niz samo do broja 377 a onda prekinuti program
### primer ###
# program: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377



### BONUS ###
JEDANAESTI ZADATAK
# Pravićemo igru vešala, primer ovde -> http://www.losprimjer.com/vjesanje.php
# Naravno naša će biti malo drugačija...
# Reč koju korisnik treba da pogodi definišete sami kao neki string npr. rec_za_pogadjanje = 'smrdibuba'
# Korisnik ima neograničen broj pokušaja
# Kada svaki put korisnik unese slovo treba reći da li je pogodio neko slovo i treba isprintati delovi reči koje je pogodio do sada
# Kada korisnik pogodi reč, treba isprintati koliko pokušaja mu je bilo potrebno da pogodi reč
### primer ###
# program: Zamislio sam neku reč. Upiši neko slovo i na taj način pokušaj da pogodiš reč (pretpostavimo da je reč smrdibuba)
# korisnik: b
# program: Bravo pronašao si slovo! Tvoja reč izgleda ovako _ _ _ _ _ b _ b _
# itd. itd.
# Odlično! Pogodio si reč smrdibuba. Uspeo si to iz 20 pokušaja.



DVANAESTI ZADATAK
# Data su dva rečnika. Napisati program koji će da spoji dva rečnika u treći
# prvi_recnik = {'a': 10, 'b': 20, 'c': 30}
# drugi_recnik = {'d': 40, 'e': 50, 'f': 60}



TRINAESTI ZADATAK
# Dat je rečnik sa proizvodima i njihovim cenama
# Napisati program koji će da od korisnika uzme neku cifru i da kaže koji proizvodi su skuplji od te cifre
### primer ###
# proizvodi = {'banane': 129, 'kivi': 188, 'limun': 232, 'lubenica': 98, 'grejpfrut': 203, 'jabuke': 75, 'ananas': 176}
# program: Unesi neku cenu
# korisnik: 150
# program: Proizvodi koji su skuplji od 150din su kivi, limun, grejpfrut, ananas